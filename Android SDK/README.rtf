{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green128\blue128;\red63\green127\blue127;\red127\green0\blue127;
\red42\green0\blue255;\red0\green0\blue192;\red127\green0\blue85;\red100\green100\blue100;\red63\green127\blue95;
\red38\green38\blue38;\red242\green242\blue242;\red255\green0\blue0;\red127\green159\blue191;\red63\green95\blue191;
\red127\green127\blue159;}
\margl1440\margr1440\vieww16680\viewh13140\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qc

\f0\fs28 \cf0 nGage SDK Project Integration
\fs24 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
1. Get the the latest SDK and extract the zip. Here you will find:\
\
	nGage- android resource project and includes the ngageSDK.jar  library\
	SampleApp - Sample SDK project \
\
\
2. Add nGage resource to the project: -  Since Android does not allow packing resources directly into a library file you must add the nGage Android project. In eclipse, Import 'nGage' project from the SDK zip file. Go to your apps Project Properties and select Android menu item on left. On the right you will see a 'Library' section. Select the 'Add' button and find the android project 'nGage'. \
\
Note: Make sure the nGage project has a Target Android Version of 3.2 or higher. Minimum Android version can be as low as 2.1.\
\
\
3. In your apps Manifest file add the lines inside the 
\f1\fs22 \cf2 <\cf3 application> 
\f0\fs24 \cf0 tag:\
 
\f1\fs22 \cf2 <\cf3 application 
\f0\fs24 \cf0 \'85
\f1\fs22 \cf3 >
\f0\fs24 \cf0 \
\pard\pardeftab720

\f1\fs22 \cf0 	
\f0\fs24 \'85\
\

\f1\fs22 	 \cf2 <\cf3 service\cf0  \cf4 android:name\cf0 =\cf5 "org.openudid.OpenUDID_service"\cf2 >\cf0 \
			 \cf2 <\cf3 intent-filter\cf2 >\cf0 \
				\cf2 <\cf3 action\cf0  \cf4 android:name\cf0 =\cf5 "org.openudid.GETUDID"\cf2 />\cf0 \
			\cf2 </\cf3 intent-filter\cf2 >\cf0 \
	\cf2 </\cf3 service\cf2 >\

\f0\fs24 \cf0 \

\f1\fs22       \cf2 <\cf3 activity\cf0  \cf4 android:screenOrientation\cf0 =\cf5 "sensorLandscape"\cf0  \cf4 android:configChanges\cf0 =\cf5 "keyboardHidden|orientation"\cf0  \cf4 android:name\cf0 =\cf5 "com.tinidream.ngage.nGageActivity"\cf2 />\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 	\'85\
\pard\pardeftab720

\f1\fs22 \cf2 </\cf3 application\cf2 >
\f0\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qc
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural
\cf0 Also in the Manifest, add attribute 
\f1\fs22 \cf4 android:launchMode\cf0 =\cf5 "singleTask" 
\f0\fs24 \cf0 to your apps starting activity tag. \
For example, you will have something like 
\f1\fs22 \cf2 <\cf3 activity\cf5  \cf4 android:name\cf0 =\cf5 "com.company.appname.startingActivity" \'85 \cf4 android:launchMode\cf0 =\cf5 "singleTask"\cf2 />\
\

\f0\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qc
\cf0 \

\fs28 nGage SDK Code Integration
\fs24 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
In your apps Activity class onCreate function add:\
1. (Optional) Make an Activity instance variable of the nGage object.\
	\
	
\f1\fs22 \cf6 ngage\cf0 =nGage.getInstance(); // You can also choose to use \cf6 nGage.getInstance()\cf0  to make all SDK calls instead\cf6 .\cf0 \
\
\
2. Call the SDK onCreate function with a reference to your apps Activity and your apps nGage SDK Key. You can find your SDK Key on the nGage web portal once you have setup a company account and created an App.\
\
	\cf6 ngage\cf0 .onCreate(\cf6 this\cf0 , \cf5 "<Your apps nGage SDK Key"\cf0 );\

\f0\fs24 \
\
3.   When your application exits, call function 
\f1\fs22 \cf6 ngage\cf0 .onDestroy
\f0\fs24 (). Our recommended placement is in your app's Activity onDestroy function but anywhere will do as long as it is when the app exits. \
\
	
\f1\fs22 \cf6 ngage\cf0 .onDestroy(); \
\
\
4. To show the nGage achievements dialog call:\
	\
	\cf6 ngage\cf0 .showAchievements();\
\
\pard\pardeftab720
\cf0 \
\
\
\
\pard\pardeftab720\qc

\fs28 \cf0 Completing Actions
\fs22 \
\pard\pardeftab720
\cf0 \
To complete an action add the below line when the action requirements are completed in your app. Pass the action type as the parameter: \
\pard\pardeftab720
\cf6 	\
	ngage\cf0 .completeAction(<actionID>);\
\
If you app requires a value like High Score as part of the actions requirements then call:\
\
\cf6 	ngage\cf0 .completeAction(<actionID>,value);\
\
The <actionID> type is a String that is assigned to an action when creating a campaign on the web portal. Make sure your Silver and Gold actions types are different in a campaign.\
\
Sample nGage Action ID's:\
\
LevelUp	: Should be called each time your user levels up\
Win		: Should be called each time your user wins\
Play		: Should be called each time your user plays a round\
Buy		: Should be called each time your user buys an item\
Use		: Should be called each time your user uses an item\
Share		: Should be called each time your user shares on a social network\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qc

\fs28 \cf0 Receiving Rewards\

\fs22 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 1. 
\f0\fs24 In your apps Activity 
\f1\fs22 onResume
\f0\fs24  function add:\
\
	
\f1\fs22 \cf6 ngage\cf0 .getPendingRewards(); //Calls the server to check for rewards when the app resumes.  \
\
\
2. Implement the nGageListener to the class you wish to receive your callback on. \
\
\pard\pardeftab720
\cf7 	public\cf0  \cf7 class\cf0  myClassWhereIwantReward \cf7 implements\cf0  nGageListener\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 3. Pass that class instance to 'setRewardListener':\
	\cf6 ngage\cf0 .setRewardListener(\cf7 this\cf0 );\
\
\
4. Add the callback function:\
\
\pard\pardeftab720
\cf8 	@Override\cf0 \
	\cf7 public\cf0  \cf7 void\cf0  nGageReward(\cf7 int\cf0  reward, String currency_claim_token) \{\
		\cf9 // Callback from getPendingRewards call\cf0 \
		\cf7 if\cf0  (reward>0)\
			Log.w(\cf5 "nGage"\cf0 , \cf5 "You've received a reward of "\cf0 +reward+\cf5 ". Your server confirmation token is "+ \cf0 currency_claim_token);\
	\}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\qc

\fs28 \cf0 \
Optional Currency Verification
\fs22 \
\pard\pardeftab720
\cf0 \
\pard\pardeftab720
\cf10 Publishers are able to verify currency claims by making a call to the following URL:\
\pard\pardeftab720
\cf10 \cb11 	http://engage.pxladdicts.com/engage/verifycurrencyclaimtoken/token/\cf12 TOKEN_FROM_SDK\cf10 \
\pard\pardeftab720
\cf10 \cb1 	Parameters:\
\pard\pardeftab720
\cf12 	TOKEN_FROM_SDK\cf10  - token is provided by the client-side SDK on every /engage/getpendingrewards call\
\
Response:\
	The API call returns JSON in the following format:\
\pard\pardeftab720
\cf10 \cb11 	\{"result": \{"token_verified": \cf12 0 or 1, i.e. is the token valid\cf10 , "claimed": \cf12 0 or 1, i.e. has the token been claimed before\cf10 , currency_amount":\cf12 AMOUNT_OF_CURRENCY_AS_AN_INTEGER\cf10 \}\}\
\pard\pardeftab720
\cf10 \cb1 \
To prevent fraud, you should give currency to the user only server-side, and only when token_verified is 1 and claimed is 0\
\pard\pardeftab720
\cf0 \
\
\
\
\pard\pardeftab720\qc

\fs28 \cf0 Interstitials\

\fs22 \
\pard\pardeftab720\li640\fi-640
\cf0 1.	We have incentivized and non-incentivized interstitials. You can also customize the header text for. Simply pass to the show call a string you wish to show with the ad.\
\pard\pardeftab720
\cf0 \
	Non-Incentivized Intersticial: \cf6 ngage.\cf0 showInterstitial() or \cf6 ngage.\cf0 showInterstitial("Custom Header Text");\
\
	Incentivized Intersticial: \cf6 ngage.\cf0 showIncentedInterstitial() ;\
\
\
\pard\tx720\pardeftab720\li620\fi-620
\cf0 2. 	If you've setup the Receive Rewards section above then you are ready to receive rewards from incentivized interstitial also. \
\pard\pardeftab720
\cf0 \
\pard\tx720\pardeftab720\li660\fi-660
\cf0 3. 	You can optionally setup a callback for informational purposes. To do so implement nGageInterstitialListener with callback function:\
\pard\pardeftab720
\cf7 	\
	void\cf0  nGageInterstitial(\cf7 boolean\cf0  displayed, String errorCode); \cf7 \
\pard\pardeftab720\li620\fi-620
\cf13 	@param\cf14  displayed \cf15 -\cf14  If true then the ad was shown and errorCode will be null. If false then no inventory was available or some other server error occurred.\cf0 \
\pard\pardeftab720
\cf14 	\cf13 @param\cf14  errorCode \cf15 -\cf14  errorCode returns a server code prompt for debugging.\cf7 \
	\cf0 \
\pard\pardeftab720\li700\fi-700
\cf0 4.	You can optionally call \cf6 ngage.\cf0 onBackPressed() which will close the interstitial if it's open. It also returns true if the interstitial was open and was closed successfully. If it returns false the interstitial was not showing and you can process the back key normally for your app. \
\pard\pardeftab720
\cf0 	\
\
\
\
\pard\pardeftab720\qc

\fs28 \cf0 Proguard (optional)
\fs22 \
\pard\pardeftab720
\cf0 If you are using proguard add the following lines to your proguard.cfg file: \
\
-\ul dontwarn\ulnone  com.tinidream.**\
-keep class com.tinidream.** \{*;\}\
\pard\pardeftab720\qc
\cf0 \
\
\

\fs28 Sample App
\fs22 \
\pard\pardeftab720
\cf0 \
We have included SampleApp which is a simple app that has the SDK and the above calls integrated. If you have any issues take a look at how the SampleApp works. If you still having issues contact your representative with specific questions and we'll be happy to help. \
\
Thank you for integrating the nGage SDK! \
\
\
\
\
\pard\pardeftab720\qr
\cf0 j\
}